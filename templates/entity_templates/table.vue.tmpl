<template>
  <div class="p-4">
    <USkeleton v-if="loading" class="h-96" />
    
    <UAlert v-else-if="error" :description="error" color="error" variant="soft" />
    
    <div v-else>
      <div class="flex items-center gap-2 p-2 mb-4">
        <UInput
          v-model="search"
          icon="i-heroicons-magnifying-glass"
          placeholder="Search {{.PluralName | toLower}}..."
          size="sm"
          class="max-w-sm"
        />
      </div>
      
      <UTable :data="{{.PluralName | toLower}}" :columns="columns" />
    </div>
  </div>
</template>

<script setup lang="ts">
import type { {{.StructName | toPascal}} } from '../stores/{{.StructName | toLower}}'
import { ref, h, resolveComponent, computed } from 'vue'
import type { TableColumn } from '#imports'

interface Props {
  {{.StructName | toLower}}: {{.StructName | toPascal}}[]
  loading?: boolean
  error?: string | null
}

const props = withDefaults(defineProps<Props>(), {
  loading: false,
  error: null
})

const emit = defineEmits<{
  (e: 'edit', {{.StructName | toLower}}: {{.StructName | toPascal}}): void
  (e: 'delete', {{.StructName | toLower}}: {{.StructName | toPascal}}): void
  (e: 'view', {{.StructName | toLower}}: {{.StructName | toPascal}}): void
}>()

const search = ref('')

const {{.PluralName | toLower}} = computed(() => props.{{.StructName | toLower}})

const columns: TableColumn<{{.StructName | toPascal}}>[] = [
  {
    accessorKey: 'id',
    header: 'ID'
  },
  {{range .Fields}}
  {
    accessorKey: '{{.JSONName}}',
    header: '{{.JSONName | toPascal}}'
  },
  {{end}}
  {
    accessorKey: 'createdAt',
    header: 'Created'
  },
  {
    accessorKey: 'actions',
    header: () => h('div', { class: 'text-right' }, 'Actions'),
    cell: ({ row }) => h('div', { class: 'flex justify-end gap-2' }, [
      h(resolveComponent('UButton'), {
        color: 'primary',
        variant: 'ghost',
        icon: 'i-heroicons-eye',
        size: 'xs',
        onClick: () => emit('view', row as unknown as {{.StructName | toPascal}})
      }),
      h(resolveComponent('UButton'), {
        color: 'primary',
        variant: 'ghost',
        icon: 'i-heroicons-pencil-square',
        size: 'xs',
        onClick: () => emit('edit', row as unknown as {{.StructName | toPascal}})
      }),
      h(resolveComponent('UButton'), {
        color: 'red',
        variant: 'ghost',
        icon: 'i-heroicons-trash',
        size: 'xs',
        onClick: () => emit('delete', row as unknown as {{.StructName | toPascal}})
      })
    ])
  }
]
</script>
